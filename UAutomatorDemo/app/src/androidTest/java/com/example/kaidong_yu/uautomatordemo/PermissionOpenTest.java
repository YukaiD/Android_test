package com.example.kaidong_yu.uautomatordemo;

import android.content.pm.PackageManager;
import android.support.test.InstrumentationRegistry;
import android.support.test.uiautomator.By;
import android.support.test.uiautomator.UiObject;
import android.support.test.uiautomator.UiScrollable;
import android.support.test.uiautomator.UiSelector;

import org.junit.Test;

import java.util.regex.Pattern;

public class PermissionOpenTest extends AppTest {
    private static final String LocationPermission = "android.permission.ACCESS_FINE_LOCATION";
    private static final String PhoneStatePermission = "android.permission.READ_PHONE_STATE";
    private static final String StorageAccessPermission = "android.permission.WRITE_EXTERNAL_STORAGE";
    private static final String CameraAccessPermission = "android.permission.CAMERA";
    private static final String StopAppPermission = "android.permission.KILL_BACKGROUND_PROCESSES";
    private static final int WAIT_TIME = 2000;

    @Test
    public void openPermission() throws Exception{
        if (!mDevice.hasObject(By.text("Allow Permissions"))) {
            this.startMainActivityFromHomeScreen();
            mDevice.findObject(new UiSelector().className("android.widget.ImageButton").index(0)).click();
            mDevice.findObject(new UiSelector().resourceIdMatches(".*id/permission_desc")
                    .text("Low Protection")).clickAndWaitForNewWindow();
        }
        openAllowAutoStart();
        openAllowOverlay();
        openAllowAppPermissions();
        openAllowAccessibility();
        openAllowNotificationAccess();
        openAllowUsageAccess();
    }

    private void openAllowAutoStart() throws Exception{
        /*start open Allow Auto-Start*/
        UiObject autoStart = mDevice.findObject(new UiSelector().resourceIdMatches(".*id/permission_name").text("Allow Auto-Start"));
        if (autoStart.waitForExists(WAIT_TIME)){
            UiObject back = mDevice.findObject(new UiSelector().resourceIdMatches(".*id/action_bar"));
            if (back.waitForExists(WAIT_TIME)) {
                mDevice.pressBack();
            }
        }
    }

    private void openAllowOverlay() throws Exception{
        /*start opening Allow Overlay permission */
        //mDevice.findObject(new UiSelector().className("android.widget.RelativeLayout").index(1)).click();
        mDevice.findObject(new UiSelector().resourceIdMatches(".*id/permission_name").text("Allow Overlay"))
                .clickAndWaitForNewWindow();
        UiObject target = mDevice.findObject(new UiSelector().resourceIdMatches(".*id/switch_widget").text("OFF"));
        if (target.waitForExists(WAIT_TIME)){
            target.clickAndWaitForNewWindow();
        }
    }

    private void openAllowAppPermissions() throws Exception{
        PackageManager pm = InstrumentationRegistry.getContext().getPackageManager();
        /*start opening Allow App permissions*/
        mDevice.findObject(new UiSelector().resourceIdMatches(".*id/permission_name")
                .text("Allow App permissions")).clickAndWaitForNewWindow();
//        mDevice.wait(Until.hasObject(By.res(Pattern.compile(".*id/permission_allow_button"))),2000);
        boolean Location = (PackageManager.PERMISSION_GRANTED ==
                pm.checkPermission(LocationPermission , DR_SAFETY_PACKAGE));
        if(!Location){
            mDevice.findObject(new UiSelector().resourceIdMatches(".*id/permission_allow_button")
                    ).clickAndWaitForNewWindow();
        }
        boolean Phone = (PackageManager.PERMISSION_GRANTED ==
                pm.checkPermission(PhoneStatePermission , DR_SAFETY_PACKAGE));
        if(!Phone){
            mDevice.findObject(new UiSelector().resourceIdMatches(".*id/permission_allow_button")
                    ).clickAndWaitForNewWindow();
        }
        boolean Storage = (PackageManager.PERMISSION_GRANTED ==
                pm.checkPermission(StorageAccessPermission , DR_SAFETY_PACKAGE));
        if(!Storage){
            mDevice.findObject(new UiSelector().resourceIdMatches(".*id/permission_allow_button")
                    ).clickAndWaitForNewWindow();
        }
        boolean Camera = (PackageManager.PERMISSION_GRANTED ==
                pm.checkPermission(CameraAccessPermission , DR_SAFETY_PACKAGE));
        if(!Camera){
            mDevice.findObject(new UiSelector().resourceIdMatches(".*id/permission_allow_button")
                    ).clickAndWaitForNewWindow();
        }
    }

    private void openAllowAccessibility() throws Exception {
        /*start open Allow Accessibility*/
        mDevice.findObject(new UiSelector().resourceIdMatches(".*id/permission_name")
                .text("Allow Accessibility")).clickAndWaitForNewWindow();
        UiObject list = mDevice.findObject(new UiSelector().resourceIdMatches(".*id/list").scrollable(true));
        if (list.waitForExists(WAIT_TIME)) {
            UiScrollable settingPermission = new UiScrollable(new UiSelector().resourceIdMatches(".*id/list"))
                    .setMaxSearchSwipes(5);
            UiObject target = mDevice.findObject(new UiSelector().resourceIdMatches(".*android:id/title")
                    .text("Dr. Safety"));
            settingPermission.scrollIntoView(target);
            target.clickAndWaitForNewWindow();
            mDevice.findObject(new UiSelector().resourceIdMatches(".*id/switch_widget").text("OFF")).clickAndWaitForNewWindow();
            mDevice.findObject(new UiSelector().resourceIdMatches(".*id/button1").text("OK")).clickAndWaitForNewWindow();
        }
    }

    private void openAllowNotificationAccess() throws Exception{
        /*start open Allow Notification Access*/
        mDevice.findObject(new UiSelector().resourceIdMatches(".*id/permission_name")
                .text("Allow Notification Access")).clickAndWaitForNewWindow();
        UiObject target = mDevice.findObject(new UiSelector().resourceIdMatches(".*id/title")
                .text("Dr. Safety"));
        if (target.waitForExists(WAIT_TIME)){
            mDevice.findObject(new UiSelector().resourceIdMatches(".*id/title").text("Dr. Safety")).clickAndWaitForNewWindow();
            mDevice.findObject(new UiSelector().resourceIdMatches(".*id/button1")).clickAndWaitForNewWindow();
        }
    }

    private void openAllowUsageAccess() throws  Exception{
        /*start open Allow Usage Access*/
        mDevice.findObject(new UiSelector().resourceIdMatches(".*id/permission_name")
                .text("Allow Usage Access")).clickAndWaitForNewWindow();
        UiObject target = mDevice.findObject(new UiSelector().resourceIdMatches(".*id/title")
                .text("Dr. Safety"));
        if (target.waitForExists(WAIT_TIME)){
            target.clickAndWaitForNewWindow();
            mDevice.findObject(new UiSelector().className("android.widget.Switch").text("OFF")).clickAndWaitForNewWindow();
        }else if (mDevice.hasObject(By.res(Pattern.compile(".*id/list")).scrollable(true))){
            UiScrollable scrollTarget = new UiScrollable(new UiSelector().resourceIdMatches(".*id/list"))
                    .setMaxSearchSwipes(5);
            UiObject target1 = mDevice.findObject(new UiSelector().resourceIdMatches(".*id/title")
                    .text("Dr. Safety"));
            scrollTarget.scrollIntoView(target1);
            target1.clickAndWaitForNewWindow();
            mDevice.findObject(new UiSelector().className("android.widget.Switch").text("OFF")).clickAndWaitForNewWindow();
        }
        // mDevice.findObject(new UiSelector().resourceIdMatches(".*id/switch_widget").text("OFF")).click();
    }
}
